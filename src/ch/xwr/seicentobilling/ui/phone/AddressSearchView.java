package ch.xwr.seicentobilling.ui.phone;

import com.vaadin.data.Property;
import com.vaadin.event.ItemClickEvent;
import com.vaadin.navigator.ViewChangeListener;
import com.vaadin.server.ClientConnector;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.XdevBeanContainer;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.filter.XdevContainerFilterComponent;
import com.xdev.ui.navigation.Navigation;
import com.xdev.ui.util.NestedProperty;

import ch.xwr.seicentobilling.dal.CustomerDAO;
import ch.xwr.seicentobilling.entities.City_;
import ch.xwr.seicentobilling.entities.Customer;
import ch.xwr.seicentobilling.entities.Customer_;

public class AddressSearchView extends XdevView {

	/**
	 *
	 */
	public AddressSearchView() {
		super();
		this.initUI();
	}

	@Override
	public void enter(final ViewChangeListener.ViewChangeEvent event) {
		super.enter(event);

		loadTable();
	}

	/**
	 * Event handler delegate method for the {@link XdevVerticalLayout}
	 * {@link #verticalLayout}.
	 *
	 * @see ClientConnector.AttachListener#attach(ClientConnector.AttachEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void verticalLayout_attach(final ClientConnector.AttachEvent event) {
		//loadTable();
	}

	private void loadTable() {

		final XdevBeanContainer<Customer> myList = this.table.getBeanContainerDataSource();
		myList.removeAll();
		myList.addAll(new CustomerDAO().findAllCustomers());

		this.table.refreshRowCache();
		this.table.getBeanContainerDataSource().refresh();

	}

	/**
	 * Event handler delegate method for the {@link XdevTable} {@link #table}.
	 *
	 * @see ItemClickEvent.ItemClickListener#itemClick(ItemClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void table_itemClick(final ItemClickEvent event) {
		final Customer bean = (Customer) event.getItemId();
		Navigation.to("customerView").parameter("Customer", bean).navigate();
	}

//	private Customer getNewDefaultBean() {
//		final Customer bean = new Customer();
//		bean.setCusState(LovState.State.active);
//
//		return bean;
//	}


	/**
	 * Event handler delegate method for the {@link XdevTable} {@link #table}.
	 *
	 * @see Property.ValueChangeListener#valueChange(Property.ValueChangeEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void table_valueChange(final Property.ValueChangeEvent event) {
		//dummy

	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.verticalLayout = new XdevVerticalLayout();
		this.containerFilterComponent = new XdevContainerFilterComponent();
		this.table = new XdevTable<>();

		this.verticalLayout.setSpacing(false);
		this.verticalLayout.setMargin(new MarginInfo(false));
		this.table.setContainerDataSource(Customer.class, false, NestedProperty.of(Customer_.city, City_.ctyZip),
				NestedProperty.of(Customer_.city, City_.ctyName));
		this.table.setVisibleColumns(Customer_.cusNumber.getName(), Customer_.cusName.getName(),
				Customer_.cusFirstName.getName(), Customer_.cusCompany.getName(),
				NestedProperty.path(Customer_.city, City_.ctyZip), NestedProperty.path(Customer_.city, City_.ctyName));
		this.table.setColumnHeader("cusNumber", "Nummer");
		this.table.setColumnHeader("cusName", "Name");
		this.table.setColumnHeader("cusFirstName", "Vorname");
		this.table.setColumnHeader("cusCompany", "Firma");
		this.table.setColumnHeader("city.ctyZip", "PLZ");
		this.table.setColumnHeader("city.ctyName", "Ort");

		this.containerFilterComponent.setContainer(this.table.getBeanContainerDataSource(), "cusNumber", "cusName",
				"cusFirstName", "cusCompany", "cusAddress", "city.ctyName");
		this.containerFilterComponent.setSearchableProperties("cusName", "cusFirstName", "cusCompany", "city.ctyName");

		this.containerFilterComponent.setWidth(100, Unit.PERCENTAGE);
		this.containerFilterComponent.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.containerFilterComponent);
		this.verticalLayout.setComponentAlignment(this.containerFilterComponent, Alignment.MIDDLE_CENTER);
		this.table.setSizeFull();
		this.verticalLayout.addComponent(this.table);
		this.verticalLayout.setComponentAlignment(this.table, Alignment.MIDDLE_CENTER);
		this.verticalLayout.setExpandRatio(this.table, 100.0F);
		this.verticalLayout.setSizeFull();
		this.setContent(this.verticalLayout);
		this.setSizeFull();

		this.verticalLayout.addAttachListener(event -> this.verticalLayout_attach(event));
		this.table.addItemClickListener(event -> this.table_itemClick(event));
		this.table.addValueChangeListener(event -> this.table_valueChange(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevTable<Customer> table;
	private XdevVerticalLayout verticalLayout;
	private XdevContainerFilterComponent containerFilterComponent;
	// </generated-code>

}
